<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>defensive programming on </title>
    <link>http://sciencecomputing.io/concepts/defensive-programming/</link>
    <description>Recent content in defensive programming on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://sciencecomputing.io/concepts/defensive-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Avoiding mistakes</title>
      <link>http://sciencecomputing.io/lessons/avoiding_mistakes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://sciencecomputing.io/lessons/avoiding_mistakes/</guid>
      <description>We can&amp;rsquo;t avoid mistakes But we can work as cautiously as possible, to make sure we catch them in time. It is always better to try and fail to run something, than to have the operation keep going and accumulating mistakes.
There are four types of mistakes to look out for: mistakes in the code, confusing interface, issues with arguments, and lack of integration. Some are caused by the programmer, and some are caused by the user.</description>
    </item>
    
  </channel>
</rss>