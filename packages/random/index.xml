<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Random on</title><link>http://sciencecomputing.io/packages/random/</link><description>Recent content in Random on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://sciencecomputing.io/packages/random/index.xml" rel="self" type="application/rss+xml"/><item><title>Neural network with Flux</title><link>http://sciencecomputing.io/machinelearning/neuralnetwork/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://sciencecomputing.io/machinelearning/neuralnetwork/</guid><description>In this lesson, we will create neural networks using Flux, a performant and elegant package for doing machine learning in Julia. Flux is very well documented, and multiple step-by-step examples have been written to provide users with a solid understanding of how it can be used to build machine learning models in a few lines of code only.
We will be using the seeds dataset, which we believe is a better version of the widely used iris dataset.</description></item><item><title>Neural Bayes classifier</title><link>http://sciencecomputing.io/machinelearning/naivebayes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://sciencecomputing.io/machinelearning/naivebayes/</guid><description>In this capstone, we will implement a Naive Bayes classifier, to make predictions about the cultivar to which wheat seeds belong. This is a classification task, meaning that we want to get an answer that looks like class A or class B, as opposed to a regression problem in which we would like to get an answer like length = 0.8cm. At its core, Naive Bayes classification assumes that the probability of belonging to a class based on a single measurement is equal to the probability that this measurement's values originate from the distribution of known values for the class.</description></item></channel></rss>